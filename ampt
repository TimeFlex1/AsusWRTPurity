# 1a) *Speed up browsing upto 10x, Stop AsusWRT Probes Block PTR / Arpa

If using diversion adblocker skip to #1b)
For users NOT using diversion.ch:
Create/Add to bottom of /jffs/scripts/dnsmasq.postconf 

#!/bin/sh

##########################
#### Block PTR & ARPA ####
##########################

CONFIG=$1
source /usr/sbin/helper.sh
sed -i '$a\ ' $CONFIG
sed -i '$a\################################' $CONFIG
sed -i '$a\#Block Calling home PTR Queries#' $CONFIG
sed -i '$a\################################' $CONFIG
sed -i '$a\ ' $CONFIG
sed -i '$a\##################################################' $CONFIG
sed -i '$a\#Can Speed up Browsing Considerably [UPON REBOOT]#' $CONFIG
sed -i '$a\##################################################' $CONFIG
sed -i '$a\ ' $CONFIG

sed -i '$a\#Success!: Disable all Arpa: https://www.iana.org/domains/arpa' $CONFIG
pc_append "bogus-priv" $CONFIG
pc_append "server=/arpa/" $CONFIG
pc_append "server=/url.trendmicro.com/" $CONFIG


# 1b)

#Some ASUS component connects to multiple stun servers on each boot, including googles, can reveal geolocation. Blocking does NOT break VOIP.

Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.services.mozilla.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.services.mozilla.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.services.mozilla.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.services.mozilla.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.services.mozilla.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.services.mozilla.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.services.mozilla.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.l.google.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.l.google.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.l.google.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.l.google.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.l.google.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.l.google.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.iptel.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.iptel.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.iptel.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.iptel.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.iptel.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.iptel.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.stunprotocol.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.stunprotocol.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.stunprotocol.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.stunprotocol.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.stunprotocol.org from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.stunprotocol.org to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.xten.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.xten.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.xten.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.xten.com to 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: reply error is REFUSED
Nov 21 20:58:43 dnsmasq[1299]: query[A] stun.xten.com from 127.0.0.1
Nov 21 20:58:43 dnsmasq[1299]: forwarded stun.xten.com to 127.0.0.1


#For those USING diversion, be sure # 1a) is not in use, manually add the following to /opt/share/diversion/lists/wc_blacklist
#this is same as #1a dnsmasq.postconf

arpa               #Blocks all arpa, (reverse DNS, used by 127.0.0.1 for certain unknown signals noted below https://www.iana.org/domains/arpa
url.trendmicro.com # has many subdomains, eg backup21.url.trendmicro.com, backup37.url.trendmicro.com, rgom10-en.url.trendmicro.com

#Optional in diversion (I use in dnscrypt proxy blacklist for logs (dnsmasq/diversion wont log wildcard blocks) and dnscrypt treats . as . dnsmasq treats . as * 

lytics        #analytics, often abbreviated as lytic, lytic could false positive analytical.com
metric        #metrics data gathering
teleme        #telemetry, telem will block telemarket, teleme results in less false positives
stun          #stun servers. Will false positive eg, stunt.com... dnscrypt proxy can use *stun.*, *stun0* through *stun4*, for less false positives.
s1.taraba.net #Stun
s2.taraba.net #Stun

# 2) Block AsusWRT built in signaling to Trendmicro, Google & other entities

Create/Add to bottom of /jffs/scripts/hosts.postconf

#!/bin/sh

############################################################################################
### Block Trendmicro / Asus / Google Probes & redundant NXDOMAIN dnsmasq querys and logs ###
############################################################################################

# Blocks most 10-14 second reoccurring querys to google
# Blocks all reoccurring querys to Asus / Trend Micro
# Stops redundant logging for cleaner logs [when blocking trendmicro, and google in diversion for example]

##############################################################################
# 1. Note, repeated querys to google safe browsing servers become apparent if:
# (A) The items listed below have been blocked by dnscrypt or dnsmasq
# (B) You've compiled and blocked whatever unique suspicious entries appear for you in dnscrypt.
# (C) You disable in-addr.arpa (PTR/Reverse DNS altogether for localhost) (recommended)
# This will break DNS name resolutions in AsusWRT apps like itfop (no biggie).
# Alternatively you may selectively block IP's collected from dnscrypt suspicious.log via dnsmasq hosts
# Rebooting the router with dnscrypt suspicious entry logs enabled will give you the list.
#
# 2. Note, repeated 10 second AsusWRT probes to google.com become apparent only when blocking AsusWRT querys
# to google safe browsing; the only solution for this without breaking google.com is a custom host entry in
# dnsmasq as provided here. [update this no longer appears to be an issue in 384.7-beta1, not sure when this changed]
# I recommended pinging google.com and replacing the IP below with whatever IP appears.
# Exact order of persistent reoccurring query's found in dnscrypt blocked.log after compiling hundreds of
# entries from suspicious.log and importing them to blacklist.txt
#
# 144.159.185.198.in-addr.arpa AT&T Services, Inc https://otx.alienvault.com/indicator/ip/144.159.185.198
# AlienVault details [NIDS 2001569 Behavioral Unusual Port 445 traffic Potential Scan or Infection Category: Recon. Subcategory: Scanner]
# 145.159.185.198.in-addr.arpa RIPE Network Coordination Centre
# 145.23.49.198.in-addr.arpa   RIPE Network Coordination Centre
# 217.197.79.204.in-addr.arpa  RIPE Network Coordination Centre
# 91.149.5.103.in-addr.arpa    RIPE Network Coordination Centre
# 134.84.85.88.in-addr.arpa    University of Minnesota, Office of Information Technology
# 144.23.49.198.in-addr.arpa   Latin American and Caribbean IP address Regional Registry
# 133.36.101.151.in-addr.arpa  JAPAN-INET Asia Pacific Network Information Centre
# 84.36.101.151.in-addr.arpa   RIPE Network Coordination Centre
# 42.40.189.107.in-addr.arpa   JAPAN-INET Asia Pacific Network Information Centre
# rgom10-en.url.trendmicro.com
##############################################################################

#Enable or disable sig updates as desired, just unblock dlcdnets-asus.com, run dnsmsaq run sig2nd_update.sh, reblock, repeat.
#Permanent unblock will factory sigcheck every reboot. Entry "74.125.205.147 google.com" likely redundant with newer
#firmware builds but harmless. Recommended you ping google.com and replace with new ip.

CONFIG=$1
source /usr/sbin/helper.sh
sed -i '$a\#' $CONFIG
sed -i '$a\## begin of silently block all redundant querys to Google, TrendMicro, and Asus ##' $CONFIG
pc_append "#AsusWRT AI Protection Signature updates" $CONFIG
pc_append "#remote sig file. fyi, https://dlcdnets.asus.com/pub/ASUS/LiveUpdate/Release/Wireless/sig2nd_update.zip" $CONFIG
pc_append "#copy /usr/sbin/sig_update.sh & /jffs/scripts/sig_upgrade.sh to /jffs/scripts/" $CONFIG
pc_append "#remove --no-check-certificate from sig_up*.sh to assure no MITM. " $CONFIG
pc_append "#run 'sh ./sig_update.sh' and 'sh ./sig_upgrade.sh' to update ai-protection. " $CONFIG
pc_append "192.168.50.2 activeupdate.trendmicro.co.jp" $CONFIG
pc_append "192.168.50.2 backup21.url.trendmicro.com" $CONFIG
pc_append "192.168.50.2 backup37.url.trendmicro.com" $CONFIG
pc_append "192.168.50.2 dlcdnets.asus.com #This alone is for AI-Protection sig updates, #block out for updates, restart dnsmasq via 'dnsmasq', block, repeat.;" $CONFIG
pc_append "192.168.50.2 dlcdnets-ds.asus.com.edgekey.net" $CONFIG
pc_append "192.168.50.2 e5110.dscd.akamaiedge.net" $CONFIG
pc_append "192.168.50.2 fbsv1.trendmicro.com" $CONFIG
pc_append "192.168.50.2 fbsv2.trendmicro.com" $CONFIG
pc_append "192.168.50.2 gslb1.fbs.trendmicro.com.akadns.net" $CONFIG
pc_append "192.168.50.2 ntd-asus-2014b-en.fbs20.trendmicro.com" $CONFIG
pc_append "192.168.50.2 ntd-asus-2014b-en-cfg.fbs20.trendmicro.com" $CONFIG
pc_append "192.168.50.2 rgom10-en.url.trendmicro.com" $CONFIG
pc_append "192.168.50.2 slb1.fbs.trendmicro.com.akadns.net" $CONFIG
pc_append "192.168.50.2 trendmicro.com.edgesuite.net" $CONFIG
pc_append "192.168.50.2 wideip-dlcdnets.isoi.asia" $CONFIG
pc_append "192.168.50.2 wrs.trendmicro.com" $CONFIG
pc_append "74.125.205.147 google.com" $CONFIG
sed -i '$a\## end of Silently Block All Redundant Querys to Google, TrendMicro, and Asus ##' $CONFIG
sed -i '$a\#' $CONFIG

A reboot is required for full benefits including enhanced browsing speeds

# 3) Block AsusWRT 10 second reoccuring portless probe to 8.8.8.8 (google dns) UPDATE: now appears to been replaced by 1.1.1.1!
edit /jffs/scripts/firewall-start

#!/bin/sh
#sh /jffs/scripts/scriptname.sh "xx xx xx xx"
iptables -I OUTPUT -s 8.8.8.8 -j DROP
iptables -I OUTPUT -s 8.8.4.4 -j DROP

#add or replace with 1.1.1.1 if not in use; I don't recommend giving google a copy of your dns records.

# 4) Block Reoccuring DNS Probe to Microsoft

nvram set dns_probe_content=127.0.0.1
nvram commit
notify: make sure to reboot router

# 5) Block Leaky IPv6 DNS over IPv4 (requires Dnscrypt) 
/jffs/dnscrypt/dnscrypt-proxy.toml
block_ipv6 = true

restart dnscrypt
/jffs/dnscrypt/manager dnscrypt-start

# 6) disable avahi-daemon, reduces attack surface, frees up ram. Security mostly important for public wifi hotspots, but wont hurt if not using file servers.
Create/add to /jffs/scripts/avahi-daemon.postconf

#!/bin/sh
#
# /jffs/scripts/avahi-daemon.postconf
#
# WE DON'T WANT AVAHI-DAEMON RUNNING.  It serves no purpose in our use, and may in fact interfere with
# the zeroconf service running as part of pyTivo.  This script's only purpose is to effectively remove
# the system-generated .conf file so when avahi-daemon attempts to start, it will die a quick death.

# save the system-generated conf file (in case we want to review it)
logger "avahi-daemon.postconf:" "Removing system-generated $1 so avahi-daemon will quietly exit."
mv $1 $1.system



